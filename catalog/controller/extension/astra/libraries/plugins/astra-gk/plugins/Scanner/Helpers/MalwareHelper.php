<?php
/**
 * This file is part of the Astra Security Suite
 *
 *  Copyright (c) 2019 (https://www.getastra.com/)
 *
 *  For the full copyright and license information, please view the LICENSE file that was distributed with this source code.
 *
 */

/**
 *
 *
 * @author HumansofAstra-WZ <help@getastra.com>
 * @date   2019-03-25
 */

namespace GetAstra\Plugins\Scanner\Helpers;

use GetAstra\Plugins\Scanner\Models\FileMods;
use Illuminate\Database\Capsule\Manager as DB;

class MalwareHelper
{

    public static function countRemaining()
    {
        //DB::enableQueryLog();
        //print_r(DB::getQueryLog());
        return FileMods::where('oldMD5', '<>', DB::raw('`newMD5`'))->where('knownFile', 0)->orWhere('toScan', true)->count();
        
    }

    public static function files($limit = 500)
    {
        return FileMods::where('oldMD5', '<>', DB::raw('`newMD5`'))->where('knownFile', 0)->orWhere('toScan', true)->take($limit)->get();
    }

    public static function updateMalwareToScan()
    {
        FileMods::where('isSafeFile', 'n')->update(['toScan' => true]);
    }

    public static function markCompleteDetection($record, $last_sig_id = 0)
    {
        FileMods::where('filenameMD5', $record->filenameMD5)
            ->update(['oldMD5' => $record->newMD5, 'toScan' => false, 'stoppedOnSignature' => $last_sig_id, 'isSafeFile' => 'n']);
    }

    public static function markComplete($record, $last_sig_id = 0, $isSafeFile = '')
    {

        $data = array(
            'oldMD5' => $record->newMD5,
            'toScan' => false,
            'stoppedOnSignature' => $last_sig_id
        );

        if (!empty($isSafeFile)) {
            $data['isSafeFile'] = $isSafeFile;
        }

        FileMods::where('filenameMD5', $record->filenameMD5)
            ->update($data);
    }

    public static function markUnsafe($record)
    {
        FileMods::where('filenameMD5', $record->filenameMD5)
            ->update(['isSafeFile' => 'n']);
    }

    public static function markSafe($record)
    {
        FileMods::where('filenameMD5', $record->filenameMD5)
            ->update(['isSafeFile' => 'y']);
    }

    public static function updateStoppedon($record, $sig_id)
    {
        FileMods::where('filenameMD5', $record->filenameMD5)
            ->update(['stoppedOnSignature' => $sig_id]);
    }

//    public static function updateChecksum($record, $newMD5)
//    {
//        FileMods::where('filenameMD5', $record->filenameMD5)
//            ->update(['oldMD5' => $record->newMD5, 'newMD5' => $newMD5, 'toScan' => true]);
//    }

    public static function updateChecksum($filenameMD5, $oldMD5, $newMD5, $toScan = false)
    {
        FileMods::where('filenameMD5', $filenameMD5)
            ->update(['oldMD5' => $oldMD5, 'newMD5' => $newMD5, 'toScan' => $toScan]);
    }
}